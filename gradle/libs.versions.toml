[versions]
core_version = "1.10.1"
appcompat_version = "1.6.1"
lifecycle_version = "2.6.1"
constraintlayout_version = "2.1.4"
activity_ktx_version = "1.7.2"
fragment_ktx_version = "1.6.1"
coroutines_version = "1.7.3"
security_crypto_version = "1.0.0"
material_version = "1.4.0"

room_version = "2.5.2"

retrofit_version = "2.9.0"
okhttp_version = "4.10.0"
moshi_version = "1.15.0"
hilt_version = "2.48"

coil_version = "2.4.0"

junit_version = "4.13.2"
mockito_version = "5.2.0"
mockito_kotlin_version = "5.1.0"
turbine_version = "1.0.0"
android_junit_test_version = "1.1.5"
espresso_version = "3.5.1"

android_gradle_plugin_version = "8.1.0"
kotlin_android_plugin_version = "1.9.10"

[libraries]
core                    = { module = "androidx.core:core-ktx", version.ref = "core_version" }
appcompat               = { module = "androidx.appcompat:appcompat", version.ref = "appcompat_version" }
lifecycle               = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle_version" }
viewModel               = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle_version" }
lifecycleLivedataKtx    = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle_version" }
constraintLayout        = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout_version" }
activityKtx             = { module = "androidx.activity:activity-ktx", version.ref = "activity_ktx_version" }
fragmentKtx             = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment_ktx_version" }
coroutines              = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines_version" }
coroutinesAndroid       = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines_version" }
securityCrypto          = { module = "androidx.security:security-crypto", version.ref = "security_crypto_version" }
material                = { module = "com.google.android.material:material", version.ref = "material_version" }

room                    = { module = "androidx.room:room-runtime", version.ref = "room_version" }
roomCompiler            = { module = "androidx.room:room-compiler", version.ref = "room_version" }
roomKtx                 = { module = "androidx.room:room-ktx", version.ref = "room_version" }

retrofit                = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit_version" }
retrofitMoshiConverter  = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit_version" }
okhttp                  = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp_version" }
okhttpLogInterceptor    = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp_version" }
moshi                   = { module = "com.squareup.moshi:moshi", version.ref = "moshi_version" }
moshiKotlinCodegen      = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi_version" }

hilt                    = { module = "com.google.dagger:hilt-android", version.ref = "hilt_version" }
hiltAndroidCompiler     = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt_version" }

coil                    = { module = "io.coil-kt:coil", version.ref = "coil_version" }

junit                   = { module = "junit:junit", version.ref = "junit_version" }
mockitoInline           = { module = "org.mockito:mockito-inline", version.ref = "mockito_version" }
mockitoKotlin           = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito_kotlin_version" }
coroutinesTest          = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines_version" }
turbine                 = { module = "app.cash.turbine:turbine", version.ref = "turbine_version" }
andoridJunitTest        = { module = "androidx.test.ext:junit", version.ref = "android_junit_test_version" }
espresso                = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso_version" }
roomTest                = { module = "androidx.room:room-testing", version.ref = "room_version" }

[plugins]
androidGradlePlugin     = { id = "com.android.application", version.ref = "android_gradle_plugin_version" }
kotlinAndroidPlugin     = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin_android_plugin_version" }
hiltPlugin              = { id = "com.google.dagger.hilt.android", version.ref = "hilt_version" }